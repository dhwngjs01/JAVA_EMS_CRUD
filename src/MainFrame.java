
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author conquistado
 */
public class MainFrame extends javax.swing.JFrame {
    DB db = new DB();
    
    String sessionUserId = "";
    String sessionUserName = "";
    String sessionUserDept = "";
    String sessionUserJob = "";
    
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MenuFrame = new javax.swing.JFrame();
        btnTotal = new javax.swing.JButton();
        btnManage = new javax.swing.JButton();
        lbTitle1 = new javax.swing.JLabel();
        TotalFrame = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtEno = new javax.swing.JTextField();
        txtEmodel = new javax.swing.JTextField();
        txtEton = new javax.swing.JTextField();
        txtEdate = new javax.swing.JTextField();
        txtEbelong = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TotalTable = new javax.swing.JTable();
        btnSearch = new javax.swing.JButton();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtEtype = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        ManageFrame = new javax.swing.JFrame();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ManageTable = new javax.swing.JTable();
        txtManageMachineNo = new javax.swing.JTextField();
        txtManageTel = new javax.swing.JTextField();
        lblManageMachineNo = new javax.swing.JLabel();
        lblManageTel = new javax.swing.JLabel();
        btnManageMachineNoSearch = new javax.swing.JButton();
        btnWriteManage = new javax.swing.JButton();
        txtManageBelong = new javax.swing.JTextField();
        lblManageBelong = new javax.swing.JLabel();
        lblManageManager = new javax.swing.JLabel();
        txtManageManager = new javax.swing.JTextField();
        lblManageUniq = new javax.swing.JLabel();
        txtManageUniq = new javax.swing.JTextField();
        txtManageMoney = new javax.swing.JTextField();
        lblManageMoney = new javax.swing.JLabel();
        txtManageEtc = new javax.swing.JTextField();
        lblManageEtc = new javax.swing.JLabel();
        lblManageNo = new javax.swing.JLabel();
        txtManageNo = new javax.swing.JTextField();
        btnManageNoSearch = new javax.swing.JButton();
        btnModifyManage = new javax.swing.JButton();
        btnRemoveManage = new javax.swing.JButton();
        lblManageDept = new javax.swing.JLabel();
        txtManageDept = new javax.swing.JTextField();
        RegisterDialog = new javax.swing.JDialog();
        lblRegisterTitle = new javax.swing.JLabel();
        lblRegisterId = new javax.swing.JLabel();
        txtRegisterId = new javax.swing.JTextField();
        lblRegisterPw = new javax.swing.JLabel();
        btnRegisterOk = new javax.swing.JButton();
        btnRegisterCancel = new javax.swing.JButton();
        txtRegisterPw = new javax.swing.JPasswordField();
        lblRegisterName = new javax.swing.JLabel();
        txtRegisterName = new javax.swing.JTextField();
        lblRegisterDept = new javax.swing.JLabel();
        txtRegisterDept = new javax.swing.JTextField();
        lblRegisterJob = new javax.swing.JLabel();
        txtRegisterJob = new javax.swing.JTextField();
        lbTitle = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        btnRegister = new javax.swing.JButton();
        lbId = new javax.swing.JLabel();
        lbPw = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtPw = new javax.swing.JPasswordField();

        MenuFrame.setMinimumSize(new java.awt.Dimension(403, 358));

        btnTotal.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnTotal.setText("장비 종합 현황");
        btnTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTotalActionPerformed(evt);
            }
        });

        btnManage.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        btnManage.setText("장비 이력 관리");
        btnManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageActionPerformed(evt);
            }
        });

        lbTitle1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lbTitle1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTitle1.setText("장비 이력 관리 시스템");

        javax.swing.GroupLayout MenuFrameLayout = new javax.swing.GroupLayout(MenuFrame.getContentPane());
        MenuFrame.getContentPane().setLayout(MenuFrameLayout);
        MenuFrameLayout.setHorizontalGroup(
            MenuFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuFrameLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(btnTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(btnManage)
                .addGap(31, 31, 31))
            .addGroup(MenuFrameLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(lbTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MenuFrameLayout.setVerticalGroup(
            MenuFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuFrameLayout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(lbTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(MenuFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnManage, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61))
        );

        TotalFrame.setMinimumSize(new java.awt.Dimension(928, 700));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("장비번호");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("모델");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setText("무게");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setText("입고년");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setText("소속");

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setText("유형");

        TotalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "장비번호", "모델", "무게(톤)", "입고년", "소속", "유형"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TotalTable);

        btnSearch.setText("번호 검색");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnInsert.setText("삽입");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnUpdate.setText("수정");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("삭제");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel7.setText("장비 종합 현황");

        javax.swing.GroupLayout TotalFrameLayout = new javax.swing.GroupLayout(TotalFrame.getContentPane());
        TotalFrame.getContentPane().setLayout(TotalFrameLayout);
        TotalFrameLayout.setHorizontalGroup(
            TotalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TotalFrameLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(TotalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(TotalFrameLayout.createSequentialGroup()
                        .addGroup(TotalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(27, 27, 27)
                        .addGroup(TotalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEno)
                            .addComponent(txtEmodel)
                            .addComponent(txtEton, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(TotalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(26, 26, 26)
                        .addGroup(TotalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEdate)
                            .addComponent(txtEbelong)
                            .addComponent(txtEtype, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addGroup(TotalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnInsert, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(50, 50, 50))
            .addGroup(TotalFrameLayout.createSequentialGroup()
                .addGap(324, 324, 324)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        TotalFrameLayout.setVerticalGroup(
            TotalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TotalFrameLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(TotalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TotalFrameLayout.createSequentialGroup()
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(TotalFrameLayout.createSequentialGroup()
                        .addGroup(TotalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEno, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(txtEdate, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(TotalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmodel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(txtEbelong, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGroup(TotalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(TotalFrameLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(TotalFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtEton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel6)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TotalFrameLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(txtEtype, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        ManageFrame.setMinimumSize(new java.awt.Dimension(936, 900));

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel8.setText("장비 이력 관리");

        ManageTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "이력번호", "장비번호", "전화번호", "직장명", "부서명", "담당자", "차대번호", "신고정자산", "비고"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(ManageTable);

        lblManageMachineNo.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblManageMachineNo.setText("장비번호");

        lblManageTel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblManageTel.setText("전화번호");

        btnManageMachineNoSearch.setText("장비 검색");
        btnManageMachineNoSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageMachineNoSearchActionPerformed(evt);
            }
        });

        btnWriteManage.setText("이력 작성");
        btnWriteManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWriteManageActionPerformed(evt);
            }
        });

        lblManageBelong.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblManageBelong.setText("직장명");

        lblManageManager.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblManageManager.setText("담당자");

        lblManageUniq.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblManageUniq.setText("차대번호");

        lblManageMoney.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblManageMoney.setText("신고정자산");

        lblManageEtc.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblManageEtc.setText("비고");

        lblManageNo.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblManageNo.setText("이력번호");

        btnManageNoSearch.setText("이력 검색");
        btnManageNoSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageNoSearchActionPerformed(evt);
            }
        });

        btnModifyManage.setText("이력 수정");
        btnModifyManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyManageActionPerformed(evt);
            }
        });

        btnRemoveManage.setText("이력 삭제");
        btnRemoveManage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveManageActionPerformed(evt);
            }
        });

        lblManageDept.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblManageDept.setText("부서명");

        javax.swing.GroupLayout ManageFrameLayout = new javax.swing.GroupLayout(ManageFrame.getContentPane());
        ManageFrame.getContentPane().setLayout(ManageFrameLayout);
        ManageFrameLayout.setHorizontalGroup(
            ManageFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ManageFrameLayout.createSequentialGroup()
                .addGap(351, 351, 351)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManageFrameLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(ManageFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManageFrameLayout.createSequentialGroup()
                        .addComponent(lblManageNo)
                        .addGap(29, 29, 29)
                        .addComponent(txtManageNo, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnManageNoSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(275, 275, 275))
                    .addGroup(ManageFrameLayout.createSequentialGroup()
                        .addGroup(ManageFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblManageTel)
                            .addComponent(lblManageMachineNo)
                            .addComponent(lblManageBelong)
                            .addComponent(lblManageDept)
                            .addComponent(lblManageManager)
                            .addComponent(lblManageUniq))
                        .addGap(29, 29, 29)
                        .addGroup(ManageFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtManageBelong, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtManageTel, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManageFrameLayout.createSequentialGroup()
                                .addComponent(txtManageMachineNo, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnManageMachineNoSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(243, 243, 243)))
                        .addGap(32, 32, 32)))
                .addGroup(ManageFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnWriteManage, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModifyManage, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemoveManage, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(101, 101, 101))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManageFrameLayout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addGroup(ManageFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 867, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManageFrameLayout.createSequentialGroup()
                        .addGroup(ManageFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtManageDept, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtManageUniq, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtManageManager, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ManageFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManageFrameLayout.createSequentialGroup()
                                    .addComponent(lblManageEtc)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtManageEtc, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ManageFrameLayout.createSequentialGroup()
                                    .addComponent(lblManageMoney)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtManageMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(204, 204, 204)))
                .addGap(33, 33, 33))
        );
        ManageFrameLayout.setVerticalGroup(
            ManageFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ManageFrameLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel8)
                .addGap(48, 48, 48)
                .addGroup(ManageFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ManageFrameLayout.createSequentialGroup()
                        .addGroup(ManageFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtManageNo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblManageNo)
                            .addComponent(btnManageNoSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ManageFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtManageMachineNo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblManageMachineNo)
                            .addComponent(btnManageMachineNoSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(ManageFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtManageTel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblManageTel)))
                    .addGroup(ManageFrameLayout.createSequentialGroup()
                        .addComponent(btnWriteManage, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModifyManage, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(btnRemoveManage, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ManageFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtManageBelong, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblManageBelong))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ManageFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtManageDept, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblManageDept))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ManageFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtManageManager, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblManageManager))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ManageFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtManageUniq, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblManageUniq))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ManageFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtManageMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblManageMoney))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ManageFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtManageEtc, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblManageEtc))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        RegisterDialog.setTitle("회원가입");
        RegisterDialog.setMinimumSize(new java.awt.Dimension(380, 400));
        RegisterDialog.setModal(true);

        lblRegisterTitle.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lblRegisterTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRegisterTitle.setText("회원가입");

        lblRegisterId.setFont(new java.awt.Font("굴림", 0, 14)); // NOI18N
        lblRegisterId.setText("아이디");

        lblRegisterPw.setFont(new java.awt.Font("굴림", 0, 14)); // NOI18N
        lblRegisterPw.setText("비밀번호");

        btnRegisterOk.setFont(new java.awt.Font("굴림", 0, 14)); // NOI18N
        btnRegisterOk.setText("회원가입");
        btnRegisterOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterOkActionPerformed(evt);
            }
        });

        btnRegisterCancel.setFont(new java.awt.Font("굴림", 0, 14)); // NOI18N
        btnRegisterCancel.setText("닫기");
        btnRegisterCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterCancelActionPerformed(evt);
            }
        });

        lblRegisterName.setFont(new java.awt.Font("굴림", 0, 14)); // NOI18N
        lblRegisterName.setText("이름");

        lblRegisterDept.setFont(new java.awt.Font("굴림", 0, 14)); // NOI18N
        lblRegisterDept.setText("부서");

        lblRegisterJob.setFont(new java.awt.Font("굴림", 0, 14)); // NOI18N
        lblRegisterJob.setText("직책");

        javax.swing.GroupLayout RegisterDialogLayout = new javax.swing.GroupLayout(RegisterDialog.getContentPane());
        RegisterDialog.getContentPane().setLayout(RegisterDialogLayout);
        RegisterDialogLayout.setHorizontalGroup(
            RegisterDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegisterDialogLayout.createSequentialGroup()
                .addGroup(RegisterDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(RegisterDialogLayout.createSequentialGroup()
                        .addComponent(lblRegisterJob)
                        .addGap(18, 18, 18)
                        .addComponent(txtRegisterJob, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(RegisterDialogLayout.createSequentialGroup()
                        .addComponent(lblRegisterDept)
                        .addGap(18, 18, 18)
                        .addComponent(txtRegisterDept, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(RegisterDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(RegisterDialogLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(lblRegisterName)
                            .addGap(18, 18, 18)
                            .addComponent(txtRegisterName, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, RegisterDialogLayout.createSequentialGroup()
                            .addGap(35, 35, 35)
                            .addGroup(RegisterDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(RegisterDialogLayout.createSequentialGroup()
                                    .addGroup(RegisterDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblRegisterId)
                                        .addComponent(lblRegisterPw))
                                    .addGap(18, 18, 18)
                                    .addGroup(RegisterDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtRegisterId, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                                        .addComponent(txtRegisterPw)))
                                .addComponent(lblRegisterTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RegisterDialogLayout.createSequentialGroup()
                                    .addComponent(btnRegisterOk)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnRegisterCancel))))))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        RegisterDialogLayout.setVerticalGroup(
            RegisterDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegisterDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblRegisterTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(RegisterDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRegisterId)
                    .addComponent(txtRegisterId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegisterDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRegisterPw, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRegisterPw))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegisterDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRegisterName)
                    .addComponent(txtRegisterName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegisterDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRegisterDept)
                    .addComponent(txtRegisterDept, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegisterDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRegisterJob)
                    .addComponent(txtRegisterJob, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(RegisterDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRegisterOk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRegisterCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbTitle.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lbTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTitle.setText("장비 이력 관리 시스템");

        btnLogin.setText("로그인");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btnRegister.setText("회원가입");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        lbId.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lbId.setText("아이디");

        lbPw.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lbPw.setText("비밀번호");

        txtId.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(lbTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(52, 52, 52)
                            .addComponent(lbPw, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtPw, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(58, 58, 58)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lbId, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addComponent(lbTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbId)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbPw, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPw, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void resetMachineTotalTable(){
        int iCntRow = TotalTable.getRowCount();
        int iCntColumn = TotalTable.getColumnCount();
        
	for(int i = 0; i < iCntRow; i++){
	    if(TotalTable.getValueAt(i, 0) != null){
		for(int j = 0; j < iCntColumn; j++){
		    TotalTable.setValueAt(null, i, j);
		}
	    } else {
		break;
	    }
	}
    }
    
    public void getMachineTotalData(String strQuery){
        resetMachineTotalTable();
        
	int iCntRow = TotalTable.getRowCount();
	
	try {
            db.dbOpen();
            
	    db.rs = db.stmt.executeQuery(strQuery);
	    
	    while(db.rs.next()){
		for(int i = 0; i < TotalTable.getRowCount(); i++){
		    if(TotalTable.getValueAt(i, 0) == null){
			iCntRow = i;
			break;
		    }
		}
		
		String[] val = {
		    db.rs.getString("machine_no"), 
		    db.rs.getString("machine_model"), 
		    db.rs.getString("machine_weight"), 
		    db.rs.getString("machine_year"), 
		    db.rs.getString("machine_group"), 
                    db.rs.getString("machine_type")
		};
		
		for(int i = 0; i < val.length; i++){
		    TotalTable.setValueAt(val[i], iCntRow, i);
		}
	    }
	    
	    db.dbClose();
	} catch(Exception e){
	    System.out.println(e);
	}
    }
    
    public void resetManageTable(){
        int iCntRow = ManageTable.getRowCount();
        int iCntColumn = ManageTable.getColumnCount();
	
	for(int i = 0; i < iCntRow; i++){
	    if(ManageTable.getValueAt(i, 0) != null){
		for(int j = 0; j < iCntColumn; j++){
		    ManageTable.setValueAt(null, i, j);
		}
	    } else {
		break;
	    }
	}
    }
    
    public void getManageData(String type, String arg){
        resetManageTable();
        
        int iCntRow = ManageTable.getRowCount();
	String sql = "";
        
        if(type.equals("record_no")){
            sql = "select * from ems_record where record_no = '" + arg + "'";
        } else if(type.equals("machine_no")) {
            sql = "select * from ems_record where machine_no = '" + arg + "'";
        } else {
            sql = "select * from ems_record";
        }
        
	try {
            db.dbOpen();
            
	    db.rs = db.stmt.executeQuery(sql);
	    
	    while(db.rs.next()){
		for(int i = 0; i < ManageTable.getRowCount(); i++){
		    if(ManageTable.getValueAt(i, 0) == null){
			iCntRow = i;
			break;
		    }
		}
		
		String[] val = {
                    db.rs.getString("record_no"),
		    db.rs.getString("machine_no"), 
		    db.rs.getString("record_tel"), 
		    db.rs.getString("record_belong"), 
		    db.rs.getString("record_dept"), 
		    db.rs.getString("record_manager"), 
                    db.rs.getString("record_uniq"),
                    db.rs.getString("record_money"),
                    db.rs.getString("record_etc")
		};
		
		for(int i = 0; i < val.length; i++){
		    ManageTable.setValueAt(val[i], iCntRow, i);
		}
	    }
	    
	    db.dbClose();
	} catch(Exception e){
	    System.out.println(e);
	}
    }

    private void btnTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTotalActionPerformed
        TotalFrame.setLocation(300,300);
        TotalFrame.setSize(300,300);
        TotalFrame.setVisible(true);

        getMachineTotalData("select * from ems_machine");

        ListSelectionModel cellSelectionModel = TotalTable.getSelectionModel();
        cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        cellSelectionModel.addListSelectionListener(new ListSelectionListener() { 
            public void valueChanged(ListSelectionEvent e) {
                int selectedRow = TotalTable.getSelectedRow();
                String machine_no = "";
                String machine_model = "";
                String machine_weight = "";
                String machine_year = "";
                String machine_group = "";
                String machine_type = "";
                
                
                machine_no = (String) TotalTable.getValueAt(selectedRow, 0);
                machine_model = (String) TotalTable.getValueAt(selectedRow, 1);
                machine_weight = (String) TotalTable.getValueAt(selectedRow, 2);
                machine_year = (String) TotalTable.getValueAt(selectedRow, 3);
                machine_group = (String) TotalTable.getValueAt(selectedRow, 4);
                machine_type = (String) TotalTable.getValueAt(selectedRow, 5);
                
                
                txtEno.setText(machine_no);
                txtEmodel.setText(machine_model);
                txtEton.setText(machine_weight);
                txtEdate.setText(machine_year);
                txtEbelong.setText(machine_group);
                txtEtype.setText(machine_type);
                
            }
        });
    }//GEN-LAST:event_btnTotalActionPerformed

    private void btnManageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageActionPerformed
        ManageFrame.setLocation(300,300);
        ManageFrame.setSize(300,300);
        ManageFrame.setVisible(true);
        
        getManageData("", "");
        
        ListSelectionModel cellSelectionModel = ManageTable.getSelectionModel();
        cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        cellSelectionModel.addListSelectionListener(new ListSelectionListener() { 
            public void valueChanged(ListSelectionEvent e) {
                int selectedRow = ManageTable.getSelectedRow();
                
                String record_no = "";
                String machine_no = "";
                String record_tel = "";
                String record_belong = "";
                String record_dept = "";
                String record_manager = "";
                String record_uniq = "";
                String record_money = "";
                String record_etc = "";
                
                record_no = (String) ManageTable.getValueAt(selectedRow, 0);
                machine_no = (String) ManageTable.getValueAt(selectedRow, 1);
                record_tel = (String) ManageTable.getValueAt(selectedRow, 2);
                record_belong = (String) ManageTable.getValueAt(selectedRow, 3);
                record_dept = (String) ManageTable.getValueAt(selectedRow, 4);
                record_manager = (String) ManageTable.getValueAt(selectedRow, 5);
                record_uniq = (String) ManageTable.getValueAt(selectedRow, 6);
                record_money = (String) ManageTable.getValueAt(selectedRow, 7);
                record_etc = (String) ManageTable.getValueAt(selectedRow, 8);
                
                txtManageNo.setText(record_no);
                txtManageMachineNo.setText(machine_no);
                txtManageTel.setText(record_tel);
                txtManageBelong.setText(record_belong);
                txtManageDept.setText(record_dept);
                txtManageManager.setText(record_manager);
                txtManageUniq.setText(record_uniq);
                txtManageMoney.setText(record_money);
                txtManageEtc.setText(record_etc);
            }
        });
    }//GEN-LAST:event_btnManageActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
       String loginUserId = txtId.getText();
       String loginUserPw = txtPw.getText();
       String sql = "";
       
       try {
           db.dbOpen();
           
           sql = "select *, count(*) as count from ems_user where user_id = '" + loginUserId + "' AND user_pw = '" + loginUserPw + "'";
           db.rs = db.stmt.executeQuery(sql);
           while(db.rs.next()){
               if(db.rs.getInt("count") > 0){
                   sessionUserId = db.rs.getString("user_id");
                   sessionUserName = db.rs.getString("user_name");
                   sessionUserDept = db.rs.getString("user_dept");
                   sessionUserJob = db.rs.getString("user_job");
                   
                   MenuFrame.setLocation(300, 300);
                   MenuFrame.setVisible(true);
               } else {
                   JOptionPane.showMessageDialog(null, "존재하지 않은 아이디이거나, 잘못된 비밀번호입니다.");
               }
           }
           
           db.dbClose();
       } catch(Exception e){
           System.out.println("SQL Exception : " + e.getMessage());
       }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
        RegisterDialog.show();
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void btnRegisterCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterCancelActionPerformed
        RegisterDialog.dispose();
        
        txtRegisterId.setText("");
        txtRegisterPw.setText("");
        txtRegisterName.setText("");
        txtRegisterDept.setText("");
        txtRegisterJob.setText("");
    }//GEN-LAST:event_btnRegisterCancelActionPerformed

    private void btnRegisterOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterOkActionPerformed
        String registerId = txtRegisterId.getText();
        String registerPw = txtRegisterPw.getText();
        String registerName = txtRegisterName.getText();
        String registerDept = txtRegisterDept.getText();
        String registerJob = txtRegisterJob.getText();
        
        String sql = "";
        
        try {
            db.dbOpen();
            
            // 아이디 중복 검사
            sql = "select count(*) as count from ems_user where user_id = '" + registerId + "'";
            db.rs = db.stmt.executeQuery(sql);
            while(db.rs.next()){
                if(db.rs.getInt("count") > 0){
                    JOptionPane.showMessageDialog(null, "이미 존재하는 아이디입니다.\n다른 아이디를 사용해주세요.");
                } else {
                    // 데이터베이스에 입력한 회원 정보 생성
                    sql = "insert into ems_user values('" + registerId + "', '" + registerPw + "', '" + registerName + "', '" + registerDept + "', '" + registerJob + "')";
                    int result = db.stmt.executeUpdate(sql);
                    
                    if(result > 0){
                        JOptionPane.showMessageDialog(null, "회원가입이 완료되었습니다.");

                        // 회원가입 다이얼로그 종료
                        RegisterDialog.dispose();
                        txtRegisterId.setText("");
                        txtRegisterPw.setText("");
                    } else {
                        JOptionPane.showMessageDialog(null, "알 수 없는 오류로 회원가입이 실패했습니다.\n관리자에게 문의하세요.");
                    }
                }
            }
            
            db.dbClose();
        } catch (Exception e) {
            System.out.println("SQL Exception : " + e.getMessage());
        }
    }//GEN-LAST:event_btnRegisterOkActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        String totalEno = txtEno.getText();
        String totalEModel = txtEmodel.getText();
        String totalETon = txtEton.getText();
        String totalEDate = txtEdate.getText();
        String totalEBelong = txtEbelong.getText();
        String totalEType = txtEtype.getText();
        
        if(totalEno.trim().equals("") || totalEModel.trim().equals("") || totalETon.trim().equals("") || totalEDate.trim().equals("") || totalEBelong.trim().equals("") || totalEType.trim().equals("")){
            JOptionPane.showMessageDialog(null, "공백인 입력란이 있습니다.\n모든 항목을 입력해주세요.");
        } else {
            String sql = "";
        
            try {
                db.dbOpen();

                sql = "insert into ems_machine values(" + totalEno + ", '" + totalEModel + "', '" + totalETon + "', '" + totalEDate + "', '" + totalEBelong + "', '" + totalEType + "')";

                int result = db.stmt.executeUpdate(sql);

                if(result > 0){
                    JOptionPane.showMessageDialog(null, "입력하신 장비가 추가되었습니다.");
                    
                    txtEno.setText("");
                    txtEmodel.setText("");
                    txtEton.setText("");
                    txtEdate.setText("");
                    txtEbelong.setText("");
                    txtEtype.setText("");
                } else {
                    JOptionPane.showMessageDialog(null, "알 수 없는 오류로 장비 추가가 실패했습니다.\n관리자에게 문의하세요.");
                }

                getMachineTotalData("select * from ems_machine");

                db.dbClose();
            } catch (Exception e) {
                String msg = e.getMessage();
                
                if(msg.contains("Duplicate")){
                    JOptionPane.showMessageDialog(null, "장비번호가 중복되지 않게 입력해야합니다.");
                } else {
                    System.out.println(msg);
                }
            }
        }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRowIndex = TotalTable.getSelectedRow();
        String machine_no = (String) TotalTable.getValueAt(selectedRowIndex, 0);
        String sql = "";
        
        if(machine_no == null){
            JOptionPane.showMessageDialog(null, "장비가 작성되어있는 행을 선택한 후 삭제를 눌러주세요.");
        } else {
            try {
                db.dbOpen();

                sql = "delete from ems_machine where machine_no = '" + machine_no + "'";
                int result = db.stmt.executeUpdate(sql);

                if(result > 0){
                    JOptionPane.showMessageDialog(null, "선택하신 장비가 삭제되었습니다.");
                } else {
                    JOptionPane.showMessageDialog(null, "알 수 없는 오류로 장비 삭제가 실패했습니다.\n관리자에게 문의하세요.");
                }

                db.dbClose();

                getMachineTotalData("select * from ems_machine");
            } catch(Exception e){
                System.out.println(e.getMessage());
            }
        }
        
        
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String machine_no = txtEno.getText();
        String sql = "";
        
        try {
            db.dbOpen();
            
            sql = "select *, count(*) as count from ems_machine where machine_no = '" + machine_no + "'";
            
            db.rs = db.stmt.executeQuery(sql);
            
            while(db.rs.next()){
                if(db.rs.getInt("count") > 0){
                    txtEmodel.setText(db.rs.getString("machine_model"));
                    txtEton.setText(db.rs.getString("machine_weight"));
                    txtEdate.setText(db.rs.getString("machine_year"));
                    txtEbelong.setText(db.rs.getString("machine_group"));
                    txtEtype.setText(db.rs.getString("machine_type"));
                } else {
                    JOptionPane.showMessageDialog(null, "입력하신 장비번호는 등록되지 않은 장비입니다.\n다른 장비번호를 입력하세요.");
                }
            }
            
            db.dbClose();
        } catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        String machine_no = txtEno.getText();
        
        String machine_model = txtEmodel.getText();
        String machine_weight = txtEton.getText();
        String machine_year = txtEdate.getText();
        String machine_group = txtEbelong.getText();
        String machine_type = txtEtype.getText();
        
        String sql = "";
        
        if(machine_no.trim().equals("") || machine_model.trim().equals("") || machine_weight.trim().equals("") || machine_year.trim().equals("") || machine_group.trim().equals("") || machine_type.trim().equals("")){
            JOptionPane.showMessageDialog(null, "공백인 입력란이 있습니다.\n모든 항목을 입력해주세요.");
        } else {
            try {
                db.dbOpen();

                sql = "select count(*) as count from ems_machine where machine_no = '" + machine_no + "'";

                db.rs = db.stmt.executeQuery(sql);

                while(db.rs.next()){
                    if(db.rs.getInt("count") > 0){
                        sql = "update ems_machine set machine_model = '" + machine_model + "', machine_weight = '" + machine_weight + "', machine_year = '" + machine_year + "', machine_group = '" + machine_group + "', machine_type = '" + machine_type + "' where machine_no = '" + machine_no + "'";
                        
                        int result = db.stmt.executeUpdate(sql);
                        
                        if(result > 0){
                            JOptionPane.showMessageDialog(null, machine_no + "번 장비가 수정되었습니다.");
                            getMachineTotalData("select * from ems_machine");
                        }
                        
                    } else {
                        JOptionPane.showMessageDialog(null, "입력하신 장비번호는 등록되지 않은 장비입니다.\n다른 장비번호를 입력하세요.");
                    }
                }

                db.dbClose();
            } catch(Exception e){
                System.out.println(e.getMessage());
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnManageMachineNoSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageMachineNoSearchActionPerformed
        String machine_no = txtManageMachineNo.getText();
        String sql = "";
        
        if(machine_no.trim().equals("")){
            getManageData("", "");
        } else {
            try {
                db.dbOpen();

                sql = "select count(*) as count from ems_record where machine_no = '" + machine_no + "'";

                db.rs = db.stmt.executeQuery(sql);

                while(db.rs.next()){
                    if(db.rs.getInt("count") > 0){
                        getManageData("machine_no", machine_no);
                    } else {
                        JOptionPane.showMessageDialog(null, "입력하신 장비번호는 한번도 이력이 남지 않은 장비입니다.\n다른 장비번호를 입력하세요.");
                    }
                }

                db.dbClose();
            } catch(Exception e){
                System.out.println(e.getMessage());
            }
        }
    }//GEN-LAST:event_btnManageMachineNoSearchActionPerformed

    private void btnManageNoSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageNoSearchActionPerformed
        String record_no = txtManageNo.getText();
        String sql = "";
        if(record_no.trim().equals("")){
            getManageData("", "");
        } else {
            try {
                db.dbOpen();

                sql = "select *, count(*) as count from ems_record where record_no = '" + record_no + "'";

                db.rs = db.stmt.executeQuery(sql);

                while(db.rs.next()){
                    if(db.rs.getInt("count") > 0){
                        txtManageNo.setText(db.rs.getString("record_no"));
                        txtManageMachineNo.setText(db.rs.getString("machine_no"));
                        txtManageTel.setText(db.rs.getString("record_tel"));
                        txtManageBelong.setText(db.rs.getString("record_belong"));
                        txtManageDept.setText(db.rs.getString("record_dept"));
                        txtManageManager.setText(db.rs.getString("record_manager"));
                        txtManageUniq.setText(db.rs.getString("record_uniq"));
                        txtManageMoney.setText(db.rs.getString("record_money"));
                        txtManageEtc.setText(db.rs.getString("record_etc"));
                    } else {
                        JOptionPane.showMessageDialog(null, "입력하신 이력번호는 등록되지 않은 이력입니다.\n다른 이력번호를 입력하세요.");
                    }
                }

                db.dbClose();
            } catch(Exception e){
                System.out.println(e.getMessage());
            }
        }
    }//GEN-LAST:event_btnManageNoSearchActionPerformed

    private void btnWriteManageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWriteManageActionPerformed
        String record_no = txtManageNo.getText();
        String machine_no = txtManageMachineNo.getText();
        String record_tel = txtManageTel.getText();
        String record_belong = txtManageBelong.getText();
        String record_dept = txtManageDept.getText();
        String record_manager = txtManageManager.getText();
        String record_uniq = txtManageUniq.getText();
        String record_money = txtManageMoney.getText();
        String record_etc = txtManageEtc.getText();
        
        String sql = "";
        
        if(record_no.trim().equals("") 
                || machine_no.trim().equals("") 
                || record_tel.trim().equals("") 
                || record_belong.trim().equals("") 
                || record_dept.trim().equals("") 
                || record_manager.trim().equals("") 
                || record_uniq.trim().equals("") 
                || record_money.trim().equals("")
                || record_etc.trim().equals("")){
            JOptionPane.showMessageDialog(null, "공백인 입력란이 있습니다.\n모든 항목을 입력해주세요.");
        } else {
            try {
                db.dbOpen();
                
                sql = "insert into ems_record values('" + record_no + "', '" + machine_no + "', '" + record_tel + "', '" + record_belong + "', '" + record_dept + "', '" + record_manager + "', '" + record_uniq + "', '" + record_money + "', '" + record_etc + "')";
                
                int result = db.stmt.executeUpdate(sql);
                
                if(result > 0){
                    JOptionPane.showMessageDialog(null, "장비 이력이 추가되었습니다.");
                    getManageData("", "");
                }
                
                db.dbClose();
            } catch(Exception e){
                String msg = e.getMessage();
                
                if(msg.contains("Duplicate")){
                    JOptionPane.showMessageDialog(null, "이력번호가 중복되지 않게 입력해야합니다.");
                } else {
                    System.out.println(msg);
                }
            }
        }
    }//GEN-LAST:event_btnWriteManageActionPerformed

    private void btnModifyManageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyManageActionPerformed
        String record_no = txtManageNo.getText();
        
        String machine_no = txtManageMachineNo.getText();
        String record_tel = txtManageTel.getText();
        String record_belong = txtManageBelong.getText();
        String record_dept = txtManageDept.getText();
        String record_manager = txtManageManager.getText();
        String record_uniq = txtManageUniq.getText();
        String record_money = txtManageMoney.getText();
        String record_etc = txtManageEtc.getText();
        
        String sql = "";
                
        if(record_no.trim().equals("") 
                || machine_no.trim().equals("") 
                || record_tel.trim().equals("") 
                || record_belong.trim().equals("") 
                || record_dept.trim().equals("") 
                || record_manager.trim().equals("") 
                || record_uniq.trim().equals("") 
                || record_money.trim().equals("")
                || record_etc.trim().equals("")){
            JOptionPane.showMessageDialog(null, "공백인 입력란이 있습니다.\n모든 항목을 입력해주세요.");
        } else {
            try {
                db.dbOpen();
                
                sql = "select count(*) as count from ems_record where record_no = '" + record_no + "'";
                
                db.rs = db.stmt.executeQuery(sql);
                
                while(db.rs.next()){
                    if(db.rs.getInt("count") > 0){
                        sql = "update ems_record set machine_no = '" + machine_no + "', record_tel = '" + record_tel + "', record_belong = '" + record_belong + "', record_dept = '" + record_dept + "', record_manager = '" + record_manager + "', record_uniq = '" + record_uniq + "', record_money = '" + record_money + "', record_etc = '" + record_etc + "' where record_no = '" + record_no + "'";
                
                        int result = db.stmt.executeUpdate(sql);

                        if(result > 0){
                            JOptionPane.showMessageDialog(null, record_no + "번 이력이 수정되었습니다.");
                            getManageData("", "");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "입력하신 이력 번호는 등록되지 않은 이력입니다.\n다른 이력 번호를 입력하세요.");
                    }
                }
                
                db.dbClose();
            } catch(Exception e){
                System.out.println(e.getMessage());
            }
        }
    }//GEN-LAST:event_btnModifyManageActionPerformed

    private void btnRemoveManageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveManageActionPerformed
        int selectedRowIndex = ManageTable.getSelectedRow();
        
        if(selectedRowIndex == -1){
            JOptionPane.showMessageDialog(null, "이력이 작성되어있는 행을 선택한 후 삭제를 눌러주세요.");
        } else {
            String record_no = (String) ManageTable.getValueAt(selectedRowIndex, 0);
            String sql = "";

            if(record_no == null){
                JOptionPane.showMessageDialog(null, "이력이 작성되어있는 행을 선택한 후 삭제를 눌러주세요.");
            } else {
                try {
                    db.dbOpen();

                    sql = "delete from ems_record where record_no = '" + record_no + "'";
                    int result = db.stmt.executeUpdate(sql);

                    if(result > 0){
                        JOptionPane.showMessageDialog(null, record_no + "번 이력이 삭제되었습니다.");
                        getManageData("", "");
                    }

                    db.dbClose();
                } catch(Exception e){
                    System.out.println(e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_btnRemoveManageActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame ManageFrame;
    private javax.swing.JTable ManageTable;
    private javax.swing.JFrame MenuFrame;
    private javax.swing.JDialog RegisterDialog;
    private javax.swing.JFrame TotalFrame;
    private javax.swing.JTable TotalTable;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnManage;
    private javax.swing.JButton btnManageMachineNoSearch;
    private javax.swing.JButton btnManageNoSearch;
    private javax.swing.JButton btnModifyManage;
    private javax.swing.JButton btnRegister;
    private javax.swing.JButton btnRegisterCancel;
    private javax.swing.JButton btnRegisterOk;
    private javax.swing.JButton btnRemoveManage;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnTotal;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnWriteManage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbId;
    private javax.swing.JLabel lbPw;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JLabel lbTitle1;
    private javax.swing.JLabel lblManageBelong;
    private javax.swing.JLabel lblManageDept;
    private javax.swing.JLabel lblManageEtc;
    private javax.swing.JLabel lblManageMachineNo;
    private javax.swing.JLabel lblManageManager;
    private javax.swing.JLabel lblManageMoney;
    private javax.swing.JLabel lblManageNo;
    private javax.swing.JLabel lblManageTel;
    private javax.swing.JLabel lblManageUniq;
    private javax.swing.JLabel lblRegisterDept;
    private javax.swing.JLabel lblRegisterId;
    private javax.swing.JLabel lblRegisterJob;
    private javax.swing.JLabel lblRegisterName;
    private javax.swing.JLabel lblRegisterPw;
    private javax.swing.JLabel lblRegisterTitle;
    private javax.swing.JTextField txtEbelong;
    private javax.swing.JTextField txtEdate;
    private javax.swing.JTextField txtEmodel;
    private javax.swing.JTextField txtEno;
    private javax.swing.JTextField txtEton;
    private javax.swing.JTextField txtEtype;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtManageBelong;
    private javax.swing.JTextField txtManageDept;
    private javax.swing.JTextField txtManageEtc;
    private javax.swing.JTextField txtManageMachineNo;
    private javax.swing.JTextField txtManageManager;
    private javax.swing.JTextField txtManageMoney;
    private javax.swing.JTextField txtManageNo;
    private javax.swing.JTextField txtManageTel;
    private javax.swing.JTextField txtManageUniq;
    private javax.swing.JPasswordField txtPw;
    private javax.swing.JTextField txtRegisterDept;
    private javax.swing.JTextField txtRegisterId;
    private javax.swing.JTextField txtRegisterJob;
    private javax.swing.JTextField txtRegisterName;
    private javax.swing.JPasswordField txtRegisterPw;
    // End of variables declaration//GEN-END:variables
}
